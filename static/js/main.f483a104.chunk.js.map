{"version":3,"sources":["components/Card/Card.js","api/getFetch.js","components/Loader/Loader.jsx","helpers/getPageCount.js","components/pagination/pagination.js","components/FormSearch/FormSearch.jsx","components/Navigation/Navigation.jsx","routes/index.js","router/RouterHome/RouterHome.js","components/About/About.jsx","components/Details/Detail.js","App.js","index.js"],"names":["Card","id","imgUrl","title","year","genres","summary","className","to","pathname","state","src","alt","slice","FetchRequest","limit","page","fetch","response","res","json","name","Loader","getPageCount","totalCount","Math","ceil","Pagination","totalPages","currentPage","pageClick","leftClick","rightClick","pages","useState","pageLimit","maxPageLimit","setMaxPageLimit","minPageLimit","setMinPageLimit","i","push","renderPagination","map","el","onClick","FormSearch","searchFunc","searchValue","setSeaarchValue","action","type","placeholder","value","onChange","e","target","Navigation","routes","path","component","loading","setLoading","movies","setMovies","setPage","setTotalPages","setSearchValue","isSearch","setisSearch","getFilms","a","posts","getAllPosts","data","movie_count","getSortedFilms","getPostsbyName","useEffect","medium_cover_image","itemsPerView","console","log","dataset","Number","exact","props","location","undefined","history","App","route","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f483a104.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Card.css\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nCard.propTypes = {\r\n\r\n    imgUrl: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string)\r\n\r\n}\r\n\r\n\r\nfunction Card({ id, imgUrl, title, year, genres, summary }) {\r\n\r\n    return (<div className=\"card\">\r\n        <Link\r\n            to={{\r\n                pathname: `/movie/${id}`,\r\n                state: {\r\n                    id,\r\n                    imgUrl,\r\n                    title,\r\n                    year,\r\n                    genres,\r\n                    summary\r\n                }\r\n\r\n            }}>\r\n\r\n            <div className=\"card-top\" >\r\n                <img src={imgUrl} alt=\"poster\" />\r\n            </div>\r\n            <div className=\"card-bottom\">\r\n                <p className=\"card-title\">{title}</p>\r\n                <p className=\"card-year\">{year}</p>\r\n                <p className=\"card-genres\">{genres}</p>\r\n                <p className=\"card-summary\">{summary.slice(0, 140)}</p>\r\n            </div>\r\n\r\n        </Link>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport { Card }","class FetchRequest {\r\n  static async getAllPosts(limit = 10, page = 1) {\r\n    const response = await fetch(\r\n      `https://yts.mx/api/v2/list_movies.json?limit=${limit}&page=${page}`\r\n    );\r\n    // const {data: {movies}} = await response.json()\r\n    const res = response.json();\r\n    return res;\r\n  }\r\n  static async getPostsbyName(name, page, limit) {\r\n    const response = await fetch(\r\n      `https://yts.mx/api/v2/list_movies.json?query_term=${name}&page=${page}&limit=${limit}`\r\n    );\r\n    // const {data: {movies}} = await response.json()\r\n    const res = response.json();\r\n    return res;\r\n  }\r\n}\r\n\r\nexport { FetchRequest };\r\n","\r\nimport \"./Loader.css\"\r\n\r\nfunction Loader() {\r\n    return <div className=\"loader-wrapper\">\r\n        <div className=\"loader\">\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport { Loader }","function getPageCount(totalCount, limit) {\r\n    return Math.ceil(totalCount / limit)\r\n}\r\n\r\nexport {getPageCount}","import { useState } from \"react\";\r\n\r\nimport \"./pagination.css\";\r\n\r\nconst Pagination = ({\r\n  totalPages,\r\n  currentPage,\r\n  pageClick,\r\n  leftClick,\r\n  rightClick,\r\n}) => {\r\n  const pages = [];\r\n  const [pageLimit, setPageLimit] = useState(5);\r\n  const [maxPageLimit, setMaxPageLimit] = useState(5);\r\n  const [minPageLimit, setMinPageLimit] = useState(0);\r\n\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  // const indexOfLastItem = currentPage * itemsPerView\r\n  // const indexxOfFirstItem = indexOfLastItem - itemsPerView;\r\n  // const currentItems = pages.slice(indexxOfFirstItem, indexOfLastItem)\r\n\r\n  const renderPagination = pages.map((el) => {\r\n    if (el < maxPageLimit + 1 && el > minPageLimit) {\r\n      return (\r\n        <div\r\n          key={el}\r\n          data-value={el}\r\n          className={currentPage == el ? \"active\" : \"pagination-element\"}\r\n          onClick={pageClick}\r\n        >\r\n          {el}\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n\r\n  if (currentPage > maxPageLimit) {\r\n    setMaxPageLimit(maxPageLimit + pageLimit);\r\n    setMinPageLimit(minPageLimit + pageLimit);\r\n  }\r\n\r\n  if (currentPage - 1 < minPageLimit) {\r\n    setMaxPageLimit(maxPageLimit - pageLimit);\r\n    setMinPageLimit(minPageLimit - pageLimit);\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <div className=\"pagination-element\" onClick={leftClick}>\r\n        prev\r\n      </div>\r\n      {renderPagination}\r\n      <div className=\"pagination-element\" onClick={rightClick}>\r\n        next\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Pagination };\r\n\r\n// function Pagination(totalPages, currentPage, pagePerView = 0) {\r\n//     const LEFT_PAGE = 'LEFT';\r\n//     const RIGHT_PAGE = 'RIGHT';\r\n//     let pages = [];\r\n\r\n//     const totalNumbers = (pagePerView * 2) + 3;      //  totalNumbers: the total page numbers to show on the control\r\n//     const totalBlocks = totalNumbers + 2;         //  totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\r\n\r\n//     if(totalPages > totalBlocks){\r\n//         const startPage = Math.max(2, currentPage - pagePerView);\r\n//         const endPage = Math.min(totalPages-1, currentPage + pagePerView);\r\n//         pages = range(startPage, endPage);\r\n\r\n//         // console.log(`totalPages ${totalPages}`)\r\n//         // console.log(`pagePerView ${pagePerView}`)\r\n//         // console.log(`currentPage ${currentPage}`)\r\n//         // console.log(`start ${startPage}`)\r\n//         // console.log(`end ${endPage}`)\r\n//         // console.log(`pages ${pages}`)\r\n\r\n//         const hasLeftSpill = startPage > 2;                     // * hasLeftSpill: has hidden pages to the left\r\n//         const hasRightSpill = (totalPages - endPage) > 1;       // * hasRightSpill: has hidden pages to the right\r\n//         const spillOffset = totalNumbers - (pages.length + 1);  // * spillOffset: number of hidden pages either to the left or to the right\r\n//         // console.log(`hasleft ${hasLeftSpill}`)\r\n//         // console.log(`hasright ${hasRightSpill}`)\r\n//         // console.log(`spillOfset ${spillOffset}`)\r\n//         switch(true) {\r\n//             case (hasLeftSpill && !hasRightSpill): {\r\n//                 const extraPages = range(startPage - spillOffset, startPage-1);\r\n//                 pages = [LEFT_PAGE, ...extraPages, ...pages];\r\n//                 console.log(`pages ${pages}`)\r\n//                 break;\r\n//             }\r\n//             case (!hasLeftSpill && hasRightSpill): {\r\n//                 const extraPages = range(endPage  +1, endPage + spillOffset);\r\n//                 pages = [...pages, ...extraPages, RIGHT_PAGE];\r\n//                 console.log(`pages ${pages}`)\r\n//                 break;\r\n//             }\r\n//             case (hasLeftSpill && hasRightSpill):\r\n//             default: {\r\n\r\n//                 pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\r\n//                 console.log(`pages ${pages}`)\r\n//                 break;\r\n//             }\r\n//         }\r\n\r\n//         return [1, ...pages, totalPages];\r\n\r\n//     }\r\n//     return range(1, totalPages);\r\n// }\r\n","import { React, useState } from \"react\";\r\nconst FormSearch = ({ searchFunc, searchValue, setSeaarchValue }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <form action=\"\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Поиск...\"\r\n          value={searchValue}\r\n          onChange={(e) => {\r\n            // setValue(e.target.value);\r\n            setSeaarchValue(e.target.value);\r\n          }}\r\n        />\r\n        <input type=\"button\" value=\"search\" onClick={searchFunc} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { FormSearch };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n// import { FormSearch } from \"../FormSearch/FormSearch\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\"> Главная</Link>\r\n      <Link to=\"/about\"> О проекте</Link>\r\n      {/* <FormSearch /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Navigation };\r\n","import { RouterHome } from \"../router/RouterHome/RouterHome\";\r\nimport { About } from \"../components/About/About\";\r\nimport { Detail } from \"../components/Details/Detail\";\r\n\r\nconst routes = [\r\n  { path: \"/\", component: RouterHome, exact: true },\r\n  { path: \"/about\", component: About, exact: true },\r\n  { path: \"/movie/:id\", component: Detail, exact: true },\r\n];\r\n\r\nexport { routes };\r\n","import { React, useState, useEffect } from \"react\";\r\nimport \"./RouterHome.css\";\r\nimport { Card } from \"../../components/Card/Card\";\r\nimport { FetchRequest } from \"../../api/getFetch\";\r\nimport { Loader } from \"../../components/Loader/Loader\";\r\nimport { getPageCount } from \"../../helpers/getPageCount\";\r\nimport { Pagination } from \"../../components/pagination/pagination\";\r\nimport { FormSearch } from \"../../components/FormSearch/FormSearch\";\r\n// import {RenderPagination} from \"../../components/pagination/paginationRender\"\r\n\r\nfunction RouterHome() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [movies, setMovies] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  // let arr = pagination(totalPages, page);\r\n  const [isSearch, setisSearch] = useState(false);\r\n\r\n  const getFilms = async () => {\r\n    setLoading(true);\r\n    const posts = FetchRequest.getAllPosts(limit, page);\r\n    const { data } = await posts;\r\n    setMovies(data.movies);\r\n    setTotalPages(getPageCount(data.movie_count, limit));\r\n    setLoading(false);\r\n  };\r\n\r\n  const getSortedFilms = async () => {\r\n    setLoading(true);\r\n    setisSearch(true);\r\n    const posts = FetchRequest.getPostsbyName(searchValue, page, limit);\r\n    const { data } = await posts;\r\n    setMovies(data.movies);\r\n    setTotalPages(getPageCount(data.movie_count, limit));\r\n    setLoading(false);\r\n  };\r\n\r\n  const getSearch = (value) => {\r\n    setSearchValue(value);\r\n  };\r\n\r\n  const rightClick = (e) => {\r\n    console.log(\"right\");\r\n    setPage(page + 1);\r\n  };\r\n  const leftClick = (e) => {\r\n    console.log(\"left\");\r\n    if (page > 0) {\r\n      setPage(page - 1);\r\n    }\r\n  };\r\n  const pageClick = (e) => {\r\n    console.log(e.target.dataset.value);\r\n    setPage(Number(e.target.dataset.value));\r\n  };\r\n  useEffect(() => {\r\n    if (isSearch) {\r\n      getSortedFilms();\r\n    } else {\r\n      getFilms();\r\n    }\r\n  }, [page]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <FormSearch\r\n        searchFunc={getSortedFilms}\r\n        searchValue={searchValue}\r\n        setSeaarchValue={getSearch}\r\n      />\r\n      <div className=\"cards\">\r\n        {movies.map((el) => {\r\n          return (\r\n            <Card\r\n              key={el.id}\r\n              id={el.id}\r\n              imgUrl={el.medium_cover_image}\r\n              title={el.title}\r\n              year={el.year}\r\n              genres={el.genres}\r\n              summary={el.summary}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <Pagination\r\n        totalPages={totalPages}\r\n        itemsPerView={limit}\r\n        currentPage={page}\r\n        pageClick={pageClick}\r\n        leftClick={leftClick}\r\n        rightClick={rightClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { RouterHome };\r\n","import React from \"react\";\r\n\r\n\r\nfunction About() {\r\n    return <div>Ab</div>\r\n}\r\n\r\nexport { About }","import {React, useEffect} from \"react\";\r\nimport {Card} from \"../Card/Card\"\r\n\r\nfunction Detail(props) {\r\n    const data = props.location.state;\r\n\r\n    useEffect(() =>{\r\n        if(data === undefined) {\r\n            props.history.push('/')\r\n        }\r\n    }, [])\r\n\r\n    if(data === undefined) {\r\n        return 0;\r\n    }else {\r\n        console.log(data)\r\n        return <div className= \"container\">\r\n            <Card  \r\n            id = {data.id} \r\n            imgUrl = {data.imgUrl}\r\n            title = {data.title}\r\n            year = {data.year}\r\n            genres = {data.genres}\r\n            summary = {data.summary}>\r\n         \r\n            </Card>\r\n        </div>\r\n    }\r\n    \r\n}\r\n\r\nexport {Detail}","import {React} from \"react\";\r\nimport {RouterHome} from './router/RouterHome/RouterHome'\r\nimport {About} from \"./components/About/About\"\r\nimport {Navigation} from \"./components/Navigation/Navigation\"\r\nimport {Detail} from \"./components/Details/Detail\"\r\nimport {HashRouter, Route} from 'react-router-dom';\r\nimport { routes } from \"./routes/index\";\r\n\r\nimport './App.css'\r\n\r\nfunction App() {\r\n    return <>\r\n    <HashRouter>\r\n        <Navigation/>\r\n    {routes.map((route)=>{\r\n       return <Route key = {route.path} component = {route.component} path = {route.path} exact = {route.exact} />\r\n    })}\r\n    </HashRouter>\r\n    </>\r\n    }\r\n\r\n \r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}